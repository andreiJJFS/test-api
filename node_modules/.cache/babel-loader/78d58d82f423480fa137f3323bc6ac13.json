{"ast":null,"code":"var _jsxFileName = \"/Users/andreigabzdyl/code/react/test-api/components/src/components/App.js\";\nimport React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport AreaComponent from './Area';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      areaData: undefined\n    };\n\n    this.start = async () => {\n      const data = await getAreas();\n      this.setState({\n        areaData: data\n      });\n    };\n  }\n\n  render() {\n    //console.log(this.state)\n    return React.createElement(\"div\", {\n      className: \"ui container comments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/area\",\n      component: AreaComponent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    })));\n  }\n\n}\n\nclass ZoneComp2 extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      categoryData: false\n    };\n\n    this.update = async props => {\n      const zones = await getCategory(props);\n      this.setState({\n        categoryData: zones\n      });\n    };\n\n    this.clearState = () => {\n      this.setState({\n        zoneData: undefined\n      });\n    };\n\n    this.renderData = data => {\n      return data.map(({\n        ZoneId,\n        ZoneName\n      }) => {\n        return React.createElement(\"li\", {\n          key: ZoneId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, ZoneId, \" : \", ZoneName, \" \", React.createElement(\"button\", {\n          onClick: () => {\n            this.update(ZoneId);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, \"Go\"));\n      });\n    };\n  }\n\n  render() {\n    const zoneData = this.renderData(this.props.data);\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Zone Data:\", zoneData, React.createElement(\"button\", {\n      onClick: this.clearState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Clear\"), this.state.categoryData && React.createElement(CategoryComp3, {\n      data: this.state.categoryData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass CategoryComp3 extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      categoryData: false\n    };\n\n    this.update = async props => {\n      const zones = await getZones(props);\n      this.setState({\n        zoneData: zones\n      });\n    };\n\n    this.renderData = data => {\n      return data.map(({\n        ZoneId,\n        ZoneName\n      }) => {\n        return React.createElement(\"li\", {\n          key: ZoneId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, ZoneId, \" : \", ZoneName, \" \", React.createElement(\"button\", {\n          onClick: () => {},\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, \"Go\"));\n      });\n    };\n  }\n\n  render() {\n    console.log(this.props.data); //const categoryData = this.renderData(this.props.data)\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Category Data:\");\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/andreigabzdyl/code/react/test-api/components/src/components/App.js"],"names":["React","BrowserRouter","Route","AreaComponent","App","Component","state","areaData","undefined","start","data","getAreas","setState","render","ZoneComp2","categoryData","update","props","zones","getCategory","clearState","zoneData","renderData","map","ZoneId","ZoneName","console","log","CategoryComp3","getZones"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,KAAxB,QAAqC,kBAArC;AACA,OAAOC,aAAP,MAA0B,QAA1B;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAAA;AAAA;AAAA,SACjCC,KADiC,GACzB;AACPC,MAAAA,QAAQ,EAAEC;AADH,KADyB;;AAAA,SAKjCC,KALiC,GAKzB,YAAY;AACnB,YAAMC,IAAI,GAAG,MAAMC,QAAQ,EAA3B;AACA,WAAKC,QAAL,CAAc;AAAEL,QAAAA,QAAQ,EAAEG;AAAZ,OAAd;AACA,KARgC;AAAA;;AAUjCG,EAAAA,MAAM,GAAE;AACP;AACA,WACC;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,OAAlB;AAA0B,MAAA,SAAS,EAAEV,aAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADF,CADD;AAOA;;AAnBgC;;AAuBlC,MAAMW,SAAN,SAAwBd,KAAK,CAACK,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACvCC,KADuC,GAC/B;AACNS,MAAAA,YAAY,EAAE;AADR,KAD+B;;AAAA,SAKvCC,MALuC,GAK9B,MAAOC,KAAP,IAAiB;AACzB,YAAMC,KAAK,GAAG,MAAMC,WAAW,CAACF,KAAD,CAA/B;AACA,WAAKL,QAAL,CAAc;AAAEG,QAAAA,YAAY,EAAEG;AAAhB,OAAd;AACA,KARsC;;AAAA,SAUvCE,UAVuC,GAU1B,MAAM;AAClB,WAAKR,QAAL,CAAc;AAACS,QAAAA,QAAQ,EAAEb;AAAX,OAAd;AACA,KAZsC;;AAAA,SAcvCc,UAduC,GAczBZ,IAAD,IAAU;AACtB,aAAOA,IAAI,CAACa,GAAL,CAAS,CAAC;AAACC,QAAAA,MAAD;AAASC,QAAAA;AAAT,OAAD,KAAwB;AACvC,eAAO;AAAI,UAAA,GAAG,EAAED,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAkBA,MAAlB,SAA6BC,QAA7B,OAAuC;AAAQ,UAAA,OAAO,EAAE,MAAM;AAAE,iBAAKT,MAAL,CAAYQ,MAAZ;AAAqB,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAvC,CAAP;AACA,OAFM,CAAP;AAGA,KAlBsC;AAAA;;AAoBvCX,EAAAA,MAAM,GAAG;AACR,UAAMQ,QAAQ,GAAG,KAAKC,UAAL,CAAgB,KAAKL,KAAL,CAAWP,IAA3B,CAAjB;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKrB,KAAjB;AACA,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEEe,QAFF,EAGC;AAAQ,MAAA,OAAO,EAAE,KAAKD,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHD,EAIE,KAAKd,KAAL,CAAWS,YAAX,IAA2B,oBAAC,aAAD;AAAe,MAAA,IAAI,EAAE,KAAKT,KAAL,CAAWS,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJ7B,CADD;AASA;;AAhCsC;;AAmCxC,MAAMa,aAAN,SAA4B5B,KAAK,CAACK,SAAlC,CAA4C;AAAA;AAAA;AAAA,SAC3CC,KAD2C,GACnC;AACNS,MAAAA,YAAY,EAAE;AADR,KADmC;;AAAA,SAK3CC,MAL2C,GAKlC,MAAOC,KAAP,IAAiB;AAEzB,YAAMC,KAAK,GAAG,MAAMW,QAAQ,CAACZ,KAAD,CAA5B;AACA,WAAKL,QAAL,CAAc;AAAES,QAAAA,QAAQ,EAAEH;AAAZ,OAAd;AACA,KAT0C;;AAAA,SAW3CI,UAX2C,GAW7BZ,IAAD,IAAU;AACtB,aAAOA,IAAI,CAACa,GAAL,CAAS,CAAC;AAACC,QAAAA,MAAD;AAASC,QAAAA;AAAT,OAAD,KAAwB;AACvC,eAAO;AAAI,UAAA,GAAG,EAAED,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAkBA,MAAlB,SAA6BC,QAA7B,OAAuC;AAAQ,UAAA,OAAO,EAAE,MAAM,CAAG,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAvC,CAAP;AACA,OAFM,CAAP;AAGA,KAf0C;AAAA;;AAiB3CZ,EAAAA,MAAM,GAAG;AACRa,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWP,IAAvB,EADQ,CAER;;AACA,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADD;AAMA;;AA1B0C;;AA8B5C,eAAeN,GAAf","sourcesContent":["import React from 'react'\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport AreaComponent from './Area'\n\nclass App extends React.Component {\n\tstate = {\n\t\tareaData: undefined\n\t}\n\n\tstart = async () => {\n\t\tconst data = await getAreas()\n\t\tthis.setState({ areaData: data })\n\t}\n\n\trender(){\n\t\t//console.log(this.state)\n\t\treturn (\n\t\t\t<div className=\"ui container comments\">\n\t\t\t  <BrowserRouter>\n\t\t\t\t\t<Route exact path='/area' component={AreaComponent} />\n        </BrowserRouter>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n\nclass ZoneComp2 extends React.Component {\n\tstate = {\n\t\t\tcategoryData: false\n\t\t}\n\t\n\tupdate = async (props) => {\n\t\tconst zones = await getCategory(props)\n\t\tthis.setState({ categoryData: zones })\n\t}\t\n\n\tclearState = () => {\n\t\tthis.setState({zoneData: undefined})\n\t}\n\n\trenderData = (data) => {\n\t\treturn data.map(({ZoneId, ZoneName}) => {\n\t\t\treturn <li key={ZoneId}>{ZoneId} : {ZoneName} <button onClick={() => { this.update(ZoneId) }}>Go</button></li>\t\n\t\t})\n\t}\n\n\trender() {\n\t\tconst zoneData = this.renderData(this.props.data)\n\t\tconsole.log(this.state)\n\t\treturn (\n\t\t\t<div>\n\t\t\t\tZone Data:\n\t\t\t\t{zoneData}\n\t\t\t\t<button onClick={this.clearState}>Clear</button>\n\t\t\t\t{this.state.categoryData &&\t<CategoryComp3 data={this.state.categoryData} />}\n\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nclass CategoryComp3 extends React.Component {\n\tstate = {\n\t\t\tcategoryData: false\n\t\t}\n\n\tupdate = async (props) => {\n\t\t\n\t\tconst zones = await getZones(props)\n\t\tthis.setState({ zoneData: zones })\n\t}\n\n\trenderData = (data) => {\n\t\treturn data.map(({ZoneId, ZoneName}) => {\n\t\t\treturn <li key={ZoneId}>{ZoneId} : {ZoneName} <button onClick={() => { }}>Go</button></li>\t\n\t\t})\n\t}\n\n\trender() {\n\t\tconsole.log(this.props.data)\n\t\t//const categoryData = this.renderData(this.props.data)\n\t\treturn (\n\t\t\t<div>\n\t\t\t\tCategory Data:\n\t\t\t\t{}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n\nexport default App\n\n"]},"metadata":{},"sourceType":"module"}