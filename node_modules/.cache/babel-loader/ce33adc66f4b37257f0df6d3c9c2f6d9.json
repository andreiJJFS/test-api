{"ast":null,"code":"import _defineProperty from \"/Users/andreigabzdyl/code/react/test-api/components/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/andreigabzdyl/code/react/test-api/components/src/components/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport axios from 'axios';\n\nconst getAreas = async () => {\n  const data = await axios.get('http://localhost:5000/api/areas');\n  return data.data.Data;\n};\n\nconst getZones = async id => {\n  const data = await axios.get('http://localhost:5000/api/zones');\n  console.log(data.data.Data);\n  return data.data.Data;\n};\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      render: false\n    };\n\n    this.renderData = data => {\n      return data.map(({\n        AreaId,\n        AreaName\n      }) => {\n        return React.createElement(\"li\", {\n          key: AreaId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, AreaId, \" : \", AreaName, \" \", React.createElement(\"button\", {\n          onClick: () => {\n            this.updateHistory(AreaId);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, \"Go\"));\n      });\n    };\n\n    this.flipRender = () => {\n      this.setState({\n        render: !this.state.render\n      });\n    };\n\n    this.updateHistory = async prop => {\n      const newData = await getZones(prop);\n      this.setState((state, props) => {});\n    };\n  }\n\n  async componentDidMount() {\n    const data = await getAreas();\n    this.setState(_objectSpread({\n      data\n    }, data));\n  }\n\n  render() {\n    const display = this.state.data !== null ? this.renderData(this.state.data) : null;\n    console.log(this.state.history);\n    return React.createElement(\"div\", {\n      className: \"ui container comments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.state.render ? display : \"\", React.createElement(\"button\", {\n      onClick: this.flipRender,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/andreigabzdyl/code/react/test-api/components/src/components/App.js"],"names":["React","axios","getAreas","data","get","Data","getZones","id","console","log","App","Component","state","render","renderData","map","AreaId","AreaName","updateHistory","flipRender","setState","prop","newData","props","componentDidMount","display","history"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAG,YAAY;AAC5B,QAAMC,IAAI,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,iCAAV,CAAnB;AACA,SAAOD,IAAI,CAACA,IAAL,CAAUE,IAAjB;AACA,CAHD;;AAKA,MAAMC,QAAQ,GAAG,MAAOC,EAAP,IAAc;AAC9B,QAAMJ,IAAI,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,iCAAV,CAAnB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACA,IAAL,CAAUE,IAAtB;AACA,SAAOF,IAAI,CAACA,IAAL,CAAUE,IAAjB;AACA,CAJD;;AAMA,MAAMK,GAAN,SAAkBV,KAAK,CAACW,SAAxB,CAAkC;AAAA;AAAA;AAAA,SACjCC,KADiC,GACzB;AACPT,MAAAA,IAAI,EAAE,EADC;AAEPU,MAAAA,MAAM,EAAE;AAFD,KADyB;;AAAA,SAWjCC,UAXiC,GAWnBX,IAAD,IAAU;AACtB,aAAOA,IAAI,CAACY,GAAL,CAAS,CAAC;AAACC,QAAAA,MAAD;AAASC,QAAAA;AAAT,OAAD,KAAwB;AACvC,eAAO;AAAI,UAAA,GAAG,EAAED,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAkBA,MAAlB,SAA6BC,QAA7B,OAAuC;AAAQ,UAAA,OAAO,EAAE,MAAM;AAAE,iBAAKC,aAAL,CAAmBF,MAAnB;AAA4B,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAvC,CAAP;AACA,OAFM,CAAP;AAGA,KAfgC;;AAAA,SAiBjCG,UAjBiC,GAiBpB,MAAM;AAClB,WAAKC,QAAL,CAAc;AAAEP,QAAAA,MAAM,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAtB,OAAd;AACA,KAnBgC;;AAAA,SAqBjCK,aArBiC,GAqBjB,MAAOG,IAAP,IAAgB;AAC/B,YAAMC,OAAO,GAAG,MAAMhB,QAAQ,CAACe,IAAD,CAA9B;AACA,WAAKD,QAAL,CAAc,CAACR,KAAD,EAAQW,KAAR,KAAkB,CAE/B,CAFD;AAGA,KA1BgC;AAAA;;AAMjC,QAAMC,iBAAN,GAAyB;AACxB,UAAMrB,IAAI,GAAG,MAAMD,QAAQ,EAA3B;AACA,SAAKkB,QAAL;AAAejB,MAAAA;AAAf,OAAwBA,IAAxB;AACA;;AAmBDU,EAAAA,MAAM,GAAE;AACP,UAAMY,OAAO,GAAG,KAAKb,KAAL,CAAWT,IAAX,KAAoB,IAApB,GAA2B,KAAKW,UAAL,CAAgB,KAAKF,KAAL,CAAWT,IAA3B,CAA3B,GAA6D,IAA7E;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKG,KAAL,CAAWc,OAAvB;AACA,WACC;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKd,KAAL,CAAWC,MAAX,GAAoBY,OAApB,GAA8B,EADhC,EAEC;AAAQ,MAAA,OAAO,EAAE,KAAKN,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD,CADD;AAMA;;AArCgC;;AAwClC,eAAeT,GAAf","sourcesContent":["import React from 'react'\nimport axios from 'axios'\n\nconst getAreas = async () => {\n\tconst data = await axios.get('http://localhost:5000/api/areas')\n\treturn data.data.Data\n}\n\nconst getZones = async (id) => {\n\tconst data = await axios.get('http://localhost:5000/api/zones')\n\tconsole.log(data.data.Data)\n\treturn data.data.Data\n}\n\nclass App extends React.Component {\n\tstate = {\n\t\tdata: [],\n\t\trender: false\n\t}\n\n\tasync componentDidMount(){\n\t\tconst data = await getAreas()\n\t\tthis.setState({data, ...data})\n\t}\n\t\n\trenderData = (data) => {\n\t\treturn data.map(({AreaId, AreaName}) => {\n\t\t\treturn <li key={AreaId}>{AreaId} : {AreaName} <button onClick={() => { this.updateHistory(AreaId) }}>Go</button></li>\n\t\t})\n\t}\n\n\tflipRender = () => {\n\t\tthis.setState({ render: !this.state.render })\n\t}\n\n\tupdateHistory = async (prop) => {\n\t\tconst newData = await getZones(prop)\n\t\tthis.setState((state, props) => {\n\n\t\t})\n\t}\n\n\trender(){\n\t\tconst display = this.state.data !== null ? this.renderData(this.state.data): null\n\t\tconsole.log(this.state.history)\n\t\treturn (\n\t\t\t<div className=\"ui container comments\">\n\t\t\t\t{this.state.render ? display : \"\"}\n\t\t\t\t<button onClick={this.flipRender}>Submit</button>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}