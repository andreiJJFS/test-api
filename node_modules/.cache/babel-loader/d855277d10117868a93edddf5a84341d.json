{"ast":null,"code":"var _jsxFileName = \"/Users/andreigabzdyl/code/react/test-api/components/src/components/Area.js\";\nimport React from 'react';\n\nclass AreaComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: \"\",\n      name: \"\"\n    };\n\n    this.renderData = (data, id, name) => {\n      return data.map(data => {\n        return React.createElement(\"li\", {\n          key: data[id],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, data[id], \" : \", data[name], React.createElement(\"button\", {\n          onClick: () => {\n            this.props.getID(data[id]);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, \"Go\"));\n      });\n    };\n  }\n\n  componentDidMount() {\n    let keys = Object.keys(this.props.data[0]);\n    this.setState({\n      id: keys[0]\n    });\n    this.setState({\n      name: keys[1]\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, this.state.name && this.renderData(this.props.data, id, name));\n  }\n\n}\n\nexport default AreaComponent; // import React from 'react'\n// import { getAreas, genToken } from '../services/apiCalls'\n// class AreaComponent extends React.Component {\n// \tstate = {\n// \t\t\tareaData: null\n// \t\t}\n// \tasync componentDidMount(){\n// \t\tconst areaData = await getAreas()\n// \t\tthis.setState({ areaData })\n// \t}\n// \trenderData = (data) => {\n// \t\treturn data.map(({AreaId, AreaName}) => {\n// \t\t\treturn <li key={AreaId}>{AreaId} : {AreaName} <button onClick={() => { this.update(AreaId) }}>Go</button></li>\t\n// \t\t})\n// \t}\n// \t// update = async (props) => {\n// \t// \tconsole.log(props)\n// \t// \tconst zones = await getZones(props)\n// \t// \tthis.setState({ zoneData: zones })\n// \t// }\n// \tclearState = () => {\n// \t\tthis.setState({zoneData: undefined})\n// \t}\n// \trender() {\n// \t\tgenToken()\n// \t\tconst areaData = this.state.areaData && this.renderData(this.state.areaData)\n// \t\treturn (\n// \t\t\t<div>\n// \t\t\t\tArea Data:\n// \t\t\t\t{this.state.areaData && areaData}\n// \t\t\t\t<a href=\"/\" >\n// \t\t\t\t\t<button>Back</button> \n// \t\t\t\t</a>\n// \t\t\t</div>\n// \t\t)\n// \t}\n// }\n// export default AreaComponent","map":{"version":3,"sources":["/Users/andreigabzdyl/code/react/test-api/components/src/components/Area.js"],"names":["React","AreaComponent","Component","state","id","name","renderData","data","map","props","getID","componentDidMount","keys","Object","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA4C;AAAA;AAAA;AAAA,SAC3CC,KAD2C,GACpC;AACNC,MAAAA,EAAE,EAAE,EADE;AAENC,MAAAA,IAAI,EAAE;AAFA,KADoC;;AAAA,SAa3CC,UAb2C,GAa9B,CAACC,IAAD,EAAOH,EAAP,EAAWC,IAAX,KAAoB;AAChC,aAAOE,IAAI,CAACC,GAAL,CAAUD,IAAD,IAAU;AACzB,eACC;AAAI,UAAA,GAAG,EAAEA,IAAI,CAACH,EAAD,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoBG,IAAI,CAACH,EAAD,CAAxB,SAAiCG,IAAI,CAACF,IAAD,CAArC,EACC;AAAQ,UAAA,OAAO,EAAE,MAAM;AAAE,iBAAKI,KAAL,CAAWC,KAAX,CAAiBH,IAAI,CAACH,EAAD,CAArB;AAA4B,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,CADD;AAKA,OANM,CAAP;AAOA,KArB0C;AAAA;;AAM3CO,EAAAA,iBAAiB,GAAG;AACnB,QAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAY,KAAKH,KAAL,CAAWF,IAAX,CAAgB,CAAhB,CAAZ,CAAX;AACC,SAAKO,QAAL,CAAc;AAAEV,MAAAA,EAAE,EAAEQ,IAAI,CAAC,CAAD;AAAV,KAAd;AACA,SAAKE,QAAL,CAAc;AAAET,MAAAA,IAAI,EAAEO,IAAI,CAAC,CAAD;AAAZ,KAAd;AAED;;AAYDG,EAAAA,MAAM,GAAG;AACR,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKZ,KAAL,CAAWE,IAAX,IAAmB,KAAKC,UAAL,CAAgB,KAAKG,KAAL,CAAWF,IAA3B,EAAiCH,EAAjC,EAAqCC,IAArC,CAAzB,CADD;AAIA;;AA5B0C;;AA+B5C,eAAeJ,aAAf,C,CAUA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from 'react'\n\nclass AreaComponent extends React.Component {\n\tstate= {\n\t\tid: \"\",\n\t\tname: \"\"\n\t}\n\t\n\tcomponentDidMount() {\n\t\tlet keys = Object.keys(this.props.data[0])\n\t\t\tthis.setState({ id: keys[0]})\n\t\t\tthis.setState({ name: keys[1]})\n\n\t}\n\n\trenderData = (data, id, name) => {\n\t\treturn data.map((data) => {\n\t\t\treturn (\n\t\t\t\t<li key={data[id]}>{data[id]} : {data[name]} \n\t\t\t\t\t<button onClick={() => { this.props.getID(data[id]) }}>Go</button>\n\t\t\t\t</li>\n\t\t\t)\t\n\t\t})\t\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>{this.state.name && this.renderData(this.props.data, id, name)}</div>\n\t\t\t\n\t\t)\n\t}\n}\n\nexport default AreaComponent\n\n\n\n\n\n\n\n\n\n// import React from 'react'\n// import { getAreas, genToken } from '../services/apiCalls'\n\n// class AreaComponent extends React.Component {\n// \tstate = {\n// \t\t\tareaData: null\n// \t\t}\n\t\n// \tasync componentDidMount(){\n// \t\tconst areaData = await getAreas()\n// \t\tthis.setState({ areaData })\n// \t}\n\t\n// \trenderData = (data) => {\n// \t\treturn data.map(({AreaId, AreaName}) => {\n// \t\t\treturn <li key={AreaId}>{AreaId} : {AreaName} <button onClick={() => { this.update(AreaId) }}>Go</button></li>\t\n// \t\t})\n\t\n// \t}\n\t\n// \t// update = async (props) => {\n// \t// \tconsole.log(props)\n// \t// \tconst zones = await getZones(props)\n// \t// \tthis.setState({ zoneData: zones })\n// \t// }\n\n// \tclearState = () => {\n// \t\tthis.setState({zoneData: undefined})\n// \t}\n\n// \trender() {\n// \t\tgenToken()\n// \t\tconst areaData = this.state.areaData && this.renderData(this.state.areaData)\n// \t\treturn (\n// \t\t\t<div>\n// \t\t\t\tArea Data:\n// \t\t\t\t{this.state.areaData && areaData}\n// \t\t\t\t<a href=\"/\" >\n// \t\t\t\t\t<button>Back</button> \n// \t\t\t\t</a>\n// \t\t\t</div>\n// \t\t)\n// \t}\n// }\n\n// export default AreaComponent"]},"metadata":{},"sourceType":"module"}