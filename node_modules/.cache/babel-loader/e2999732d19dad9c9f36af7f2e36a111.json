{"ast":null,"code":"var _jsxFileName = \"/Users/andreigabzdyl/code/react/test-api/components/src/components/App.js\";\nimport React from 'react';\nimport { getAreas, getZones, getCategory } from '../services/apiCalls';\nimport AreaComponent from './Area';\nimport DataComp from './DataComp';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      areaData: [],\n      AreaId: \"\",\n      zoneData: [],\n      ZoneId: \"\",\n      categoryData: []\n    };\n\n    this.onClick = async () => {\n      const resp = await getAreas();\n      this.setState({\n        areaData: resp\n      });\n    };\n\n    this.getZoneData = async area => {\n      const resp = await getZones(area);\n      this.setState({\n        zoneData: resp\n      });\n    };\n\n    this.getCategoryData = async zone => {\n      const resp = await getCategory(this.state.AreaId, zone);\n      this.setState({\n        categoryData: resp\n      });\n      console.log(this.state);\n    };\n\n    this.setID = (name, id) => {\n      this.setState({\n        [name]: id\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"ui container comments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Start\"), this.state.areaData.length ? React.createElement(AreaComponent, {\n      data: this.state.areaData,\n      setID: this.setID,\n      getZoneData: this.getZoneData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }) : null, this.state.zoneData.length ? React.createElement(DataComp, {\n      name: \"Zone\",\n      data: this.state.zoneData,\n      setID: this.setID,\n      getCategoryData: this.getCategoryData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }) : null, this.state.categoryData.length && React.createElement(DataComp, {\n      name: \"Category\",\n      data: this.state.categoryData,\n      setID: this.setID,\n      getCategoryData: this.getCategoryData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n  }\n\n} // class ZoneComp2 extends React.Component {\n// \tstate = {\n// \t\t\tcategoryData: false\n// \t\t}\n// \tupdate = async (props) => {\n// \t\tconst zones = await getCategory(props)\n// \t\tthis.setState({ categoryData: zones })\n// \t}\t\n// \tclearState = () => {\n// \t\tthis.setState({zoneData: undefined})\n// \t}\n// \trenderData = (data) => {\n// \t\treturn data.map(({ZoneId, ZoneName}) => {\n// \t\t\treturn <li key={ZoneId}>{ZoneId} : {ZoneName} <button onClick={() => { this.update(ZoneId) }}>Go</button></li>\t\n// \t\t})\n// \t}\n// \trender() {\n// \t\tconst zoneData = this.renderData(this.props.data)\n// \t\tconsole.log(this.state)\n// \t\treturn (\n// \t\t\t<div>\n// \t\t\t\tZone Data:\n// \t\t\t\t{zoneData}\n// \t\t\t\t<button onClick={this.clearState}>Clear</button>\n// \t\t\t\t{this.state.categoryData &&\t<CategoryComp3 data={this.state.categoryData} />}\n// \t\t\t</div>\n// \t\t)\n// \t}\n// }\n// class CategoryComp3 extends React.Component {\n// \tstate = {\n// \t\t\tcategoryData: false\n// \t\t}\n// \tupdate = async (props) => {\n// \t\tconst zones = await getZones(props)\n// \t\tthis.setState({ zoneData: zones })\n// \t}\n// \trenderData = (data) => {\n// \t\treturn data.map(({ZoneId, ZoneName}) => {\n// \t\t\treturn <li key={ZoneId}>{ZoneId} : {ZoneName} <button onClick={() => { }}>Go</button></li>\t\n// \t\t})\n// \t}\n// \trender() {\n// \t\tconsole.log(this.props.data)\n// \t\t//const categoryData = this.renderData(this.props.data)\n// \t\treturn (\n// \t\t\t<div>\n// \t\t\t\tCategory Data:\n// \t\t\t\t{}\n// \t\t\t</div>\n// \t\t)\n// \t}\n// }\n\n\nexport default App;","map":{"version":3,"sources":["/Users/andreigabzdyl/code/react/test-api/components/src/components/App.js"],"names":["React","getAreas","getZones","getCategory","AreaComponent","DataComp","App","Component","state","areaData","AreaId","zoneData","ZoneId","categoryData","onClick","resp","setState","getZoneData","area","getCategoryData","zone","console","log","setID","name","id","render","length"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { getAreas, getZones, getCategory } from '../services/apiCalls'\nimport AreaComponent from './Area'\nimport DataComp from './DataComp'\n\nclass App extends React.Component {\n\tstate = {\n\t\tareaData: [],\n\t\tAreaId: \"\",\n\t\tzoneData: [],\n\t\tZoneId: \"\",\n\t\tcategoryData: []\n\t}\n\t\n\tonClick = async () => {\n\t\tconst resp = await getAreas()\n\t\tthis.setState({ areaData: resp })\n\t}\n\n\tgetZoneData = async (area) => {\n\t\tconst resp = await getZones(area)\n\t\tthis.setState({ zoneData: resp })\n\t}\n\n\tgetCategoryData = async (zone) => {\n\t\tconst resp = await getCategory(this.state.AreaId, zone)\n\t\tthis.setState({ categoryData: resp })\n\t\tconsole.log(this.state)\n\t}\n\n\tsetID = (name, id) => {\n\t\tthis.setState({ [name]: id })\n\t}\n\n\trender(){\n\t\treturn (\n\t\t\t<div className=\"ui container comments\">\n\t\t\t\t<button onClick={this.onClick}>Start</button> \n\t\t\t\t\n\t\t\t\t{this.state.areaData.length  \n\t\t\t\t\t? <AreaComponent data={this.state.areaData} setID={this.setID} getZoneData={this.getZoneData}/>\n\t\t\t\t\t:\tnull}\n\t\t\t\t{this.state.zoneData.length \n\t\t\t\t\t?<DataComp name=\"Zone\" data={this.state.zoneData} setID={this.setID} getCategoryData={this.getCategoryData} />\n\t\t\t\t  : null}\n\t\t\t\t{this.state.categoryData.length && <DataComp name=\"Category\" data={this.state.categoryData} setID={this.setID} getCategoryData={this.getCategoryData} />}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n\n// class ZoneComp2 extends React.Component {\n// \tstate = {\n// \t\t\tcategoryData: false\n// \t\t}\n\t\n// \tupdate = async (props) => {\n// \t\tconst zones = await getCategory(props)\n// \t\tthis.setState({ categoryData: zones })\n// \t}\t\n\n// \tclearState = () => {\n// \t\tthis.setState({zoneData: undefined})\n// \t}\n\n// \trenderData = (data) => {\n// \t\treturn data.map(({ZoneId, ZoneName}) => {\n// \t\t\treturn <li key={ZoneId}>{ZoneId} : {ZoneName} <button onClick={() => { this.update(ZoneId) }}>Go</button></li>\t\n// \t\t})\n// \t}\n\n// \trender() {\n// \t\tconst zoneData = this.renderData(this.props.data)\n// \t\tconsole.log(this.state)\n// \t\treturn (\n// \t\t\t<div>\n// \t\t\t\tZone Data:\n// \t\t\t\t{zoneData}\n// \t\t\t\t<button onClick={this.clearState}>Clear</button>\n// \t\t\t\t{this.state.categoryData &&\t<CategoryComp3 data={this.state.categoryData} />}\n\n// \t\t\t</div>\n// \t\t)\n// \t}\n// }\n\n// class CategoryComp3 extends React.Component {\n// \tstate = {\n// \t\t\tcategoryData: false\n// \t\t}\n\n// \tupdate = async (props) => {\n\t\t\n// \t\tconst zones = await getZones(props)\n// \t\tthis.setState({ zoneData: zones })\n// \t}\n\n// \trenderData = (data) => {\n// \t\treturn data.map(({ZoneId, ZoneName}) => {\n// \t\t\treturn <li key={ZoneId}>{ZoneId} : {ZoneName} <button onClick={() => { }}>Go</button></li>\t\n// \t\t})\n// \t}\n\n// \trender() {\n// \t\tconsole.log(this.props.data)\n// \t\t//const categoryData = this.renderData(this.props.data)\n// \t\treturn (\n// \t\t\t<div>\n// \t\t\t\tCategory Data:\n// \t\t\t\t{}\n// \t\t\t</div>\n// \t\t)\n// \t}\n// }\n\n\nexport default App\n\n"]},"metadata":{},"sourceType":"module"}